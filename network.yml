AWSTemplateFormatVersion: 2010-09-09
Description: "nsi / Udacity - This setups an IaC using cloud formation scripts,
 creates vpc,public and private subnets,Internetgateway, NatGateway, Route and Route Table 
 and also specifies resources Output"
 
Parameters:
    EnvironmentName:
        Description: An environment name that will be prefixed to resource names
        Type: String

    VpcCIDR: 
        Description: Please enter the IP range (CIDR notation) for this VPC
        Type: String
        Default: 10.0.0.0/16
    
    PublicSubnet1CIDR:
        Description: Please enter the IP range (CIDR notation) for the public subnet in the first Availability Zone
        Type: String
        Default: 10.0.0.0/24

    PublicSubnet2CIDR:
        Description: Please enter the IP range (CIDR notation) for the public subnet in the second Availability Zone
        Type: String
        Default: 10.0.1.0/24

    PrivateSubnet1CIDR:
        Description: Please enter the IP range (CIDR notation) for the private subnet in the first Availability Zone
        Type: String
        Default: 10.0.2.0/24

    PrivateSubnet2CIDR:
        Description: Please enter the IP range (CIDR notation) for the private subnet in the second Availability Zone
        Type: String
        Default: 10.0.3.0/24

Resources:
    vpc:
        Type: AWS::EC2::VPC
        Properties:
            CidrBlock: !Ref VpcCIDR
            EnableDnsHostnames: true
            Tags: 
                - Key: Name 
                  Value: !Ref EnvironmentName
    internetGateway:
        Type: AWS::EC2::InternetGateway
        Properties:
            Tags:
                - Key: Name
                  Value: !Ref EnvironmentName
            
    internetGatewayAttachment:
        Type: AWS::EC2::VPCGatewayAttachment
        Properties:
            InternetGatewayId: !Ref internetGateway
            VpcId: !Ref vpc
    publicSubnet1: 
        Type: AWS::EC2::Subnet
        Properties:
            VpcId: !Ref vpc
            AvailabilityZone: !Select [ 0, !GetAZs '' ]
            CidrBlock: !Ref PublicSubnet1CIDR
            MapPublicIpOnLaunch: true
            Tags: 
                - Key: Name 
                  Value: !Sub ${EnvironmentName} Public Subnet (AZ1)

    publicSubnet2: 
        Type: AWS::EC2::Subnet
        Properties:
            VpcId: !Ref vpc
            AvailabilityZone: !Select [ 1, !GetAZs '' ]
            CidrBlock: !Ref PublicSubnet2CIDR
            MapPublicIpOnLaunch: true
            Tags: 
                - Key: Name 
                  Value: !Sub ${EnvironmentName} Public Subnet (AZ2)

    privateSubnet1: 
        Type: AWS::EC2::Subnet
        Properties:
            VpcId: !Ref vpc
            AvailabilityZone: !Select [ 0, !GetAZs '' ]
            CidrBlock: !Ref PrivateSubnet1CIDR
            MapPublicIpOnLaunch: false
            Tags: 
                - Key: Name 
                  Value: !Sub ${EnvironmentName} Private Subnet (AZ1)

    privateSubnet2: 
        Type: AWS::EC2::Subnet
        Properties:
            VpcId: !Ref vpc
            AvailabilityZone: !Select [ 1, !GetAZs '' ]
            CidrBlock: !Ref PrivateSubnet2CIDR
            MapPublicIpOnLaunch: false
            Tags: 
                - Key: Name 
                  Value: !Sub ${EnvironmentName} Private Subnet (AZ2)
    
    natGateway1EIP:
        Type: AWS::EC2::EIP
        DependsOn: internetGatewayAttachment
        Properties: 
            Domain: vpc

    natGateway2EIP:
        Type: AWS::EC2::EIP
        DependsOn: internetGatewayAttachment
        Properties:
            Domain: vpc

    natGateway1: 
        Type: AWS::EC2::NatGateway
        Properties: 
            AllocationId: !GetAtt natGateway1EIP.AllocationId
            SubnetId: !Ref publicSubnet1

    natGateway2: 
        Type: AWS::EC2::NatGateway
        Properties:
            AllocationId: !GetAtt natGateway2EIP.AllocationId
            SubnetId: !Ref publicSubnet2
    publicRouteTable:
        Type: AWS::EC2::RouteTable
        Properties: 
            VpcId: !Ref vpc
            Tags: 
                - Key: Name 
                  Value: !Sub ${EnvironmentName} Public Routes

    defaultPublicRoute: 
        Type: AWS::EC2::Route
        DependsOn: internetGatewayAttachment
        Properties: 
            RouteTableId: !Ref publicRouteTable
            DestinationCidrBlock: 0.0.0.0/0
            GatewayId: !Ref internetGateway

    publicSubnet1RouteTableAssociation:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref publicRouteTable
            SubnetId: !Ref publicSubnet1

    publicSubnet2RouteTableAssociation:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref publicRouteTable
            SubnetId: !Ref publicSubnet2
    

    privateRouteTable1:
        Type: AWS::EC2::RouteTable
        Properties: 
            VpcId: !Ref vpc
            Tags: 
                - Key: Name 
                  Value: !Sub ${EnvironmentName} Private Routes (AZ1)

    defaultPrivateRoute1:
        Type: AWS::EC2::Route
        Properties:
            RouteTableId: !Ref privateRouteTable1
            DestinationCidrBlock: 0.0.0.0/0
            NatGatewayId: !Ref natGateway1

    privateSubnet1RouteTableAssociation:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref privateRouteTable1
            SubnetId: !Ref privateSubnet1

    privateRouteTable2:
        Type: AWS::EC2::RouteTable
        Properties: 
            VpcId: !Ref vpc
            Tags: 
                - Key: Name 
                  Value: !Sub ${EnvironmentName} Private Routes (AZ2)

    defaultPrivateRoute2:
        Type: AWS::EC2::Route
        Properties:
            RouteTableId: !Ref privateRouteTable2
            DestinationCidrBlock: 0.0.0.0/0
            NatGatewayId: !Ref natGateway2

    privateSubnet2RouteTableAssociation:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref privateRouteTable2
            SubnetId: !Ref privateSubnet2

Outputs: 

    VPC: 
        Description: A reference to the created VPC
        Value: !Ref vpc
        Export:
          Name: !Sub ${EnvironmentName}-VPCID

    VPCPublicRouteTable:
        Description: Public Routing
        Value: !Ref publicRouteTable
        Export:
          Name: !Sub ${EnvironmentName}-PUB-RT

    VPCPrivateRouteTable1:
        Description: Private Routing AZ1
        Value: !Ref privateRouteTable1
        Export:
          Name: !Sub ${EnvironmentName}-PRI1-RT

    VPCPrivateRouteTable2:
        Description: Private Routing AZ2
        Value: !Ref privateRouteTable2
        Export:
          Name: !Sub ${EnvironmentName}-PRI2-RT

    PublicSubnets:
        Description: A list of the public subnets
        Value: !Join [ ",", [ !Ref publicSubnet1, !Ref publicSubnet2 ]]
        Export:
          Name: !Sub ${EnvironmentName}-PUB-NETS

    PrivateSubnets:
        Description: A list of the private subnets
        Value: !Join [ ",", [ !Ref privateSubnet1, !Ref privateSubnet2 ]]
        Export:
          Name: !Sub ${EnvironmentName}-PRIV-NETS

    PublicSubnet1:
        Description: A reference to the public subnet in the 1st Availability Zone
        Value: !Ref publicSubnet1
        Export:
          Name: !Sub ${EnvironmentName}-PUB1-SN

    PublicSubnet2: 
        Description: A reference to the public subnet in the 2nd Availability Zone
        Value: !Ref publicSubnet2
        Export:
          Name: !Sub ${EnvironmentName}-PUB2-SN

    PrivateSubnet1:
        Description: A reference to the private subnet in the 1st Availability Zone
        Value: !Ref privateSubnet1
        Export:
          Name: !Sub ${EnvironmentName}-PRI1-SN

    PrivateSubnet2: 
        Description: A reference to the private subnet in the 2nd Availability Zone
        Value: !Ref privateSubnet2
        Export:
          Name: !Sub ${EnvironmentName}-PRI2-SN